binwidth = 4.4, fill = "white", color = "black") +
geom_density(n=1028, bw=4.4) +
theme_bw() +
theme(legend.position = "bottom")
View(trips_distance)
trips_time <- trips_valid[trips_valid$validation != "Valid Time" & trips_valid$validation != "Valid" & trips_valid$group != "none",]
View(trips_time)
trips_time <- trips_valid[trips_valid$validation == "Valid Time" & trips_valid$validation == "Valid" & trips_valid$group != "none",]
View(trips_time)
trips_time <- trips_valid[trips_valid$validation == "Valid Time" | trips_valid$validation == "Valid" & trips_valid$group != "none",]
View(trips_time)
trips_time <- trips_valid[trips_valid$validation == "Valid Time" | trips_valid$validation == "Valid" & trips_valid$group != "none",]
p_length_t <- ggplot(trips_distance, aes(x=trip_length, color=group))
p_length_t + geom_density() + theme(legend.position = "bottom")
p_length_t + geom_histogram(aes(x = trip_length, y = ..density..),
binwidth = 4.4, fill = "white", color = "black") +
geom_density(n=1028, bw=4.4) +
theme_bw() +
theme(legend.position = "bottom")
d_competition <- density(as.numeric(trips_valid[trips_valid$group == "Competition",]$trip_length), from = 0.5, to = 60, n=1028, bw=4.4)
plot (d_competition)
d_collaboration <- density(as.numeric(trips_valid[trips_valid$group == "Collaboration",]$trip_length), from = 0.5, to = 60, n=1028, bw=4.4)
plot (d_collaboration)
plot(d_competition$y/d_collaboration$y, type="l")
plot(d_competition$x/d_collaboration$x, type="l")
p_length_t + geom_density(xlim = c(0,60)) + theme(legend.position = "bottom")
p_length_t + geom_histogram(aes(x = trip_length, y = ..density..),
binwidth = 4.4, fill = "white", color = "black", xlim = c(0,60)) +
geom_density(n=1028, bw=4.4) +
theme_bw() +
theme(legend.position = "bottom")
View(table_participants)
table_participants = read.csv('data/Cyclist_Experiment.csv')
table_trips = read.csv('data/Cyclist_Trip.csv', sep = '\t')
table_location = read.csv('data/Cyclist_Location.csv', sep = '\t')
table_trips_length = read.csv('data/Cyclist_Trip_length.csv')
table_answers = read.csv('data/Questionnaire_Answers.csv')
table_answers$group <- "none"
table_answers[which(table_answers$competition_1 >= -3),]$group <- "Competition"
table_answers[which(table_answers$collaboration_1 >= -3),]$group <- "Collaboration"
trips_joined <- merge(table_trips, table_participants)
trips_joined <- merge(trips_joined, table_trips_length, all.x = TRUE)
trips_joined <- merge(trips_joined, table_answers)
location_joined <- merge(table_location, table_participants, all.y = TRUE)
View(location_joined)
location_joined <- merge (location_joined, table_answers, all.x = TRUE)
View(location_joined)
location_record <- data.frame(location_joined$participant, location_joined$device, location_joined$time_gps, location_joined$questionnaire1, location_joined$questionnaire_2,
location_joined$application_install, location_joined$longitude, location_joined$latitude, location_joined$altitude, location_joined$precision,
location_joined$city, location_joined$dem_gender, location_joined$dem_age, location_joined$group)
names(location_record) <- c("participant", "device", "time_gps", "questionnaire_1", "questionnaire_2", "application_install", "longitude", "latitude", "longitude", "altitude", "precision",
"city", "gender", "age", "group")
names(location_record) <- c("participant", "device", "time_gps", "questionnaire_1", "questionnaire_2", "application_install", "longitude", "latitude", "altitude", "precision",
"city", "gender", "age", "group")
View(location_record)
location_aggregated <- location_record %>% group_by("device") %>% sumarise(B = count(time_gps))
location_aggregated <- location_record %>% group_by("device") %>% summarise(B = count(time_gps))
location_aggregated <- location_record %>% group_by("device") %>% summarise(B = count(longitude))
location_aggregated <- location_record %>% group_by(device) %>% summarise(B = count(longitude))
location_record <- data.frame(location_joined$participant, location_joined$device, location_joined$time_gps, location_joined$questionnaire1, location_joined$questionnaire_2,
location_joined$application_install, location_joined$longitude, location_joined$latitude, location_joined$altitude, location_joined$precision,
location_joined$city, location_joined$dem_gender, location_joined$dem_age, location_joined$group)
names(location_record) <- c("participant", "device", "time_gps", "questionnaire_1", "questionnaire_2", "application_install", "longitude", "latitude", "altitude", "precision",
"city", "gender", "age", "group")
location_aggregated <- location_record %>% group_by(device) %>% summarise(B = count(longitude))
p_location <- ggplot(location_record, aes(x=device, group=device)))
p_location + geom_histogram(stat = "count")
location_record <- data.frame(location_joined$participant, location_joined$device, location_joined$time_gps, location_joined$questionnaire1, location_joined$questionnaire_2,
location_joined$application_install, location_joined$longitude, location_joined$latitude, location_joined$altitude, location_joined$precision,
location_joined$city, location_joined$dem_gender, location_joined$dem_age, location_joined$group)
names(location_record) <- c("participant", "device", "time_gps", "questionnaire_1", "questionnaire_2", "application_install", "longitude", "latitude", "altitude", "precision",
"city", "gender", "age", "group")
location_aggregated <- location_record %>% group_by(device) %>% summarise(B = count(longitude))
p_location <- ggplot(location_record, aes(x=device, group=device)))
p_location + geom_histogram(stat = "count")
p_location <- ggplot(location_record, aes(x=device, group=device))
p_location + geom_histogram(stat = "count")
p_location <- ggplot(location_record, aes(y=device, group=device))
p_location + geom_histogram(stat = "count")
p_location <- ggplot(location_record, aes(x=device, group=device))
p_location + geom_histogram(stat = "count")
p_location + geom_histogram(stat = "count") + coord_flip()
location_count <- count(location_count,"device")
location_count <- count(location_count,"device")
location_count <- count(location_record,"device")
View(location_count)
location_count <- n_distinct(location_record,"device")
location_count <- n_distinct(location_record,'device')
location_count <- n_distinct(location_record,'device')
location_count <- n_distinct(location_record,'device')
location_count <- n_distinct(location_record,'device')
location_count
location_count <- n_distinct(location_record,'device')
location_count
location_count <- n_distinct(location_record,'device')
location_count <- n_distinct(location_record,'device')
location_count <- n_distinct(location_record,'device')
location_count <- n_distinct(location_record,'device')
location_count <- n_distinct(location_record,'device')
location_count <- n_distinct(location_record,'device')
location_count <- n_distinct(location_record,'device')
location_count <- n_distinct(location_record,'device')
location_count <- n_distinct(location_record,'device')
location_count <- n_distinct(location_record,'device')
location_count <- n_distinct(location_record,'device')
location_count <- n_distinct(location_record,'device')
location_count <- n_distinct(location_record,'device')
location_count <- n_distinct(location_record,'device')
location_count <- n_distinct(location_record,'device')
location_count <- n_distinct(location_record,'device')
location_count <- n_distinct(location_record,'device')
location_count <- n_distinct(location_record,'device')
location_count <- n_distinct(location_record,'device')
location_count <- n_distinct(location_record,'device')
location_count <- n_distinct(location_record,'device')
location_count <- n_distinct(location_record,'device')
location_count <- n_distinct(location_record,'device')
location_count <- n_distinct(location_record,'device')
location_count <- n_distinct(location_record,'device')
location_count <- n_distinct(location_record,'device')
location_count <- n_distinct(location_record,'device')
location_count <- n_distinct(location_record,'device')
location_count <- n_distinct(location_record,'device')
location_count <- n_distinct(location_record,'device')
location_count <- n_distinct(location_record,'device')
location_count <- n_distinct(location_record,'device')
location_count <- n_distinct(location_record,'device')
location_count <- n_distinct(location_record,'device')
p_location + geom_histogram(stat = "count", order_by('count')) + coord_flip()
p_location
location_count <- unique(location_record,'device')
location_count
location_count <- unique(location_record,'device')
location_count
p_location + geom_histogram(stat = "count", sort = TRURE) + coord_flip()
p_location + geom_histogram(stat = "count", sort = TRUE) + coord_flip()
trips_joined$day_time <-  format ( strptime(trips_joined$trip_start, format= "%Y-%m-%dT%H:%M:%OS"), "%H:%M:%OS")
p_location + geom_bar(stat = "count", sort = TRUE) + coord_flip()
location_count <- table(location_record)
location_count
location_count <- aggregate(location_record)
location_count <- aggregate(location_record, by(device))
location_count <- aggregate(location_record, by(device), FUN = count)
location_count <- aggregate(location_record, by("device"), FUN = count)
location_count <- aggregate(location_record, by("device"), FUN = "count")
location_count <- aggregate(location_record, by("device"), FUN = sum)
location_count <- aggregate(location_record, BY =device, FUN = sum)
location_count <- aggregate(location_record, by =device, FUN = sum)
location_count <- aggregate(location_record, by = "device", FUN = sum)
location_count <- count(location_record, c("device"))
location_count
location_count <- count(location_record, c("device", "city"))
location_count
location_count <- count(location_record, c( "city"))
location_count
location_count <- count(location_record, c( city))
location_count
location_count <- count(location_record, city)
location_count
location_count <- count(location_record, c(city, device))
location_count <- count(location_record, by=(device))
location_count
View(location_count)
p_location <- ggplot(location_count, aes(x=by, y=count))
p_location + geom_bar() + coord_flip()
p_location <- ggplot(location_count, aes(x=by))
p_location + geom_bar(y=count) + coord_flip()
p_location + geom_bar(y=n) + coord_flip()
p_location <- ggplot(location_count, aes(x=by, y=n))
p_location + geom_bar(y=n) + coord_flip()
p_location + geom_bar() + coord_flip()
p_location + geom_point() + coord_flip()
location_count.order_by(n)
location_count[order(n)]
location_count[order(n),]
location_count
location_count[order(by),]
location_count[order(location_count$by),]
location_count[order(location_count$n),]
location_count <- location_count[order(location_count$n),]
p_location <- ggplot(location_count, aes(x=by, y=n))
p_location + geom_point() + coord_flip()
location_count
p_location <- ggplot(location_count, aes(x=by, y=n))
p_location + geom_point() + coord_flip()
p_location <- ggplot(location_count, aes(x=by, y=n, color=city))
p_location + geom_point() + coord_flip()
p_location <- ggplot(location_count, aes(x=by, y=n, group=city))
p_location + geom_point() + coord_flip()
location_count <- count(location_record, by=(device, city))
location_count <- location_count[order(location_count$n),]
location_count <- count(location_record, by=(device, city))
location_count <- count(location_record, by=(device))
location_count <- location_count[order(location_count$n),]
p_location <- ggplot(location_count, aes(x=by, y=n, group=city))
p_location + geom_point() + coord_flip()
, group=city
p_location <- ggplot(location_count, aes(x=by, y=n))
p_location + geom_point() + coord_flip()
location_count <- count(location_record, by=(device))
location_count
location_count <- location_count[order(location_count$n),]
location_count
p_location <- ggplot(location_count, aes(x=by, y=n))
p_location + geom_point() + coord_flip()
View(location_count)
p_location + geom_bar() + coord_flip()
p_location + geom_bar(stat = 'identity') + coord_flip()
location_count <- count(location_record, by=(device))
location_count
location_count <- location_count[order(location_count$n),]
location_count
p_location <- ggplot(location_count, aes(x=by, y=n))
p_location + geom_bar(stat = 'identity') + coord_flip()
p_location + geom_bar(stat = 'identity') + coord_flip() labs(y='n',x='by')
View(location_count)
p_location + geom(stat = 'identity') + coord_flip() labs(y='n',x='by')
p_location <- ggplot(location_count_ordered, aes(x=by, y=n))
p_location + geom(stat = 'identity') + coord_flip() labs(y='n',x='by')
p_location + geom(stat = 'identity') + coord_flip() + labs(y='n',x='by')
p_location + geom_bar(stat = 'identity') + coord_flip() + labs(y='n',x='by')
location_count_ordered <- location_count[order(location_count$n),]
p_location <- ggplot(location_count_ordered, aes(x=by, y=n))
p_location
p_location + geom_bar(stat = 'identity') + coord_flip() + labs(y='n',x='by')
location_count_ordered
p_location <- ggplot(location_count_ordered, aes(x=by, y=reorder(n)))
p_location + geom_bar(stat = 'identity') + coord_flip()
p_location <- ggplot(location_count_ordered, aes(x=by, y=reorder(n, -value)))
p_location + geom_bar(stat = 'identity') + coord_flip()
p_location <- ggplot(location_count_ordered, aes(x=reorder(n), y=by))
p_location + geom_bar(stat = 'identity') + coord_flip()
p_location <- ggplot(location_count_ordered, aes(x=reorder(n), y=by))
p_location + geom_bar(stat = 'identity')
p_location <- ggplot(location_count, aes(x=n, y=by))
p_location + geom_bar(stat = 'identity')
p_location <- ggplot(location_count, aes(x=by))
p_location + geom_bar(stat = 'identity')
p_location <- ggplot(location_count, aes(x=by, y=n))
p_location + geom_bar(stat = 'identity')
p_location <- ggplot(location_count, aes(x=by, y=reorder(n)))
p_location + geom_bar(stat = 'identity')
p_location <- ggplot(location_count, aes(x=by, y=reorder(n, value)))
p_location + geom_bar(stat = 'identity')
p_location <- ggplot(location_count, aes(x=by, y=reorder(by, n)))
p_location + geom_bar(stat = 'identity')
p_location + geom_bar(stat = 'identity') + coord_flip()
p_location <- ggplot(location_count, aes(x=reorder(by,n), y=n))
p_location + geom_bar(stat = 'identity') + coord_flip()
average(location_count$n)
avg(location_count$n)
mean(location_count$n)
p_location + geom_bar(stat = 'identity') + geom_line(y=mean(n)) + coord_flip()
p_location + geom_bar(stat = 'identity') + geom_line(y=1000) + coord_flip()
p_location + geom_bar(stat = 'identity') + geom_line(x=by, y=1000) + coord_flip()
p_location + geom_bar(stat = 'identity') + geom_hline(yintercept = 50) + coord_flip()
p_location + geom_bar(stat = 'identity') + geom_hline(yintercept = mean(n)) + coord_flip()
p_location + geom_bar(stat = 'identity') + geom_hline(yintercept = mean(location_count$n)) + coord_flip()
p_location + geom_bar(stat = 'identity') + geom_hline(yintercept = n) + coord_flip()
p_location + geom_bar(stat = 'identity') + geom_hline(yintercept = mean(n)) + coord_flip()
p_location + geom_bar(stat = 'identity') + geom_hline(yintercept = mean(location_count$n)) + coord_flip()
View(table_participants)
library(ggplot2)
require(lubridate)
library(dplyr)
source("scripts/setup.R")
location_record <- data.frame(location_joined$participant, location_joined$device, location_joined$time_gps, location_joined$questionnaire1, location_joined$questionnaire_2,
location_joined$application_install, location_joined$longitude, location_joined$latitude, location_joined$altitude, location_joined$precision,
location_joined$city, location_joined$dem_gender, location_joined$dem_age, location_joined$group)
names(location_record) <- c("participant", "device", "time_gps", "questionnaire_1", "questionnaire_2", "application_install", "longitude", "latitude", "altitude", "precision",
"city", "gender", "age", "group")
location_count <- data.frame(table(location_record$participant, location_record$device, location_record$city, location_record$group, location_record$gender, location_record$age))
names(location_count) <- c("participant", "device", "city", "group", "gender", "age", "count")
location_count <- location_count[which(location_count$count>0),]
mean(location_count$count)
p_location <- ggplot(location_count, aes(x=reorder(participant,count), y=count, fill=city))
p_location + geom_bar(stat = 'identity') + geom_hline(yintercept = mean(location_count$count)) + coord_flip()
View(location_count)
trip_record <- data.frame(trips_joined$participant, trips_joined$device, trips_joined$city, trips_joined$group)
names(trip_record) <- c("participant", "device", "city", "group")
trips_count <- data.frame(table(trip_record$participant, trip_record$device, trip_record$city, trip_record$group))
names(trips_count) <- c("participant", "device", "city", "group", "count")
trips_count <- trips_count[which(trips_count$count>0),]
p_trips <- ggplot(trips_count, aes(x=reorder(participant,count), y=count, fill=city))
p_trips + geom_bar(stat = 'identity') + geom_hline(yintercept = mean(trips_count$count)) + coord_flip()
View(trips_count)
trip_count_joined <- merge(trips_count, location_count)
View(trip_count_joined)
merge(trips_count, location_count)
trip_count_joined <- merge(trips_count, location_count, by("device"))
trip_count_joined <- merge(trips_count, location_count, by(device))
trip_count_joined <- merge(trips_count, location_count, by ="device")
View(trip_count_joined)
trip_count_joined <- merge(trips_count, location_count, by =c("device", "city"))
View(trip_count_joined)
trip_count_joined <- merge(trips_count, location_count, by =c("participant", "device", "city", "group"))
View(trip_count_joined)
names(trip_count_joined) <- c("participant", "device", "city", "group", "trips", "gender", "age", "points")
trip_count_joined$points_per_trip <- trip_count_joined$points / trip_count_joined$trips
p_trip_ratio <- ggplot(trip_count_joined, aes(x=reorder(participant,points_per_trip), y=points_per_trip, fill=city))
p_trip_ratio + geom_bar(stat = 'identity') + coord_flip()
p_trip_ratio <- ggplot(trip_count_joined, aes(x=reorder(participant,points_per_trip), y=points_per_trip, fill=city))
p_trip_ratio + geom_bar(stat = 'identity') + coord_flip()
View(trip_count_joined)
View(location_record)
sum(location_count$count)
sum(trips_count$count)
table_participants = read.csv('data/Cyclist_Experiment.csv')
table_trips = read.csv('data/Cyclist_Trip.csv', sep = '\t')
table_location = read.csv('data/Cyclist_Location.csv', sep = '\t')
table_location$time_gps <-  strptime(table_location$time_gps, format= "%Y-%m-%dT%H:%M:%OS")
table_trips_length = read.csv('data/Cyclist_Trip_length.csv')
View(table_trips_length)
View(table_trips_length)
table_trips_length = read.csv('data/Cyclist_Trip_length.csv')
library(ggplot2)
require(lubridate)
library(dplyr)
source("scripts/setup.R")
location_record <- data.frame(location_joined$participant, location_joined$device, location_joined$time_gps, location_joined$questionnaire1, location_joined$questionnaire_2,
location_joined$application_install, location_joined$longitude, location_joined$latitude, location_joined$altitude, location_joined$precision,
location_joined$city, location_joined$dem_gender, location_joined$dem_age, location_joined$group)
names(location_record) <- c("participant", "device", "time_gps", "questionnaire_1", "questionnaire_2", "application_install", "longitude", "latitude", "altitude", "precision",
"city", "gender", "age", "group")
location_count <- data.frame(table(location_record$participant, location_record$device, location_record$city, location_record$group, location_record$gender, location_record$age))
names(location_count) <- c("participant", "device", "city", "group", "gender", "age", "count")
location_count <- location_count[which(location_count$count>0),]
mean(location_count$count)
p_location <- ggplot(location_count, aes(x=reorder(participant,count), y=count, fill=city))
p_location + geom_bar(stat = 'identity') + geom_hline(yintercept = mean(location_count$count)) + coord_flip()
View(table_trips)
View(table_trips_length)
View(table_trips)
View(trips_joined)
trip_record <- data.frame(trips_joined$participant, trips_joined$device, trips_joined$city, trips_joined$group, trips_joined$trip_count, trips_joined$point_count,
trips_joined$trip_start, trips_joined$trip_stop, trips_joined$questionnaire1, trips_joined$questionnaire_2, trips_joined$length_raw,
trips_joined$length_sim, trips_joined$dif_length, trips_joined$dem_gender, trips_joined$dem_age, )
trip_record <- data.frame(trips_joined$participant, trips_joined$device, trips_joined$city, trips_joined$group, trips_joined$trip_count, trips_joined$point_count,
trips_joined$trip_start, trips_joined$trip_stop, trips_joined$questionnaire1, trips_joined$questionnaire_2, trips_joined$length_raw,
trips_joined$length_sim, trips_joined$dif_length, trips_joined$dem_gender, trips_joined$dem_age)
names(trip_record) <- c("participant", "device", "city", "group", "trip_count", "point_count", "trip_start", "trip_stop", "exper_start", "exper_end", "length_raw",
"length_sim", "dif_length", "gender", "age")
p_trips <- ggplot(trip_record, aes(x=trips_count, y=point_count, fill=city))
p_trips + geom_point()
trip_record <- data.frame(trips_joined$participant, trips_joined$device, trips_joined$city, trips_joined$group, trips_joined$trip_count, trips_joined$point_count,
trips_joined$trip_start, trips_joined$trip_stop, trips_joined$questionnaire1, trips_joined$questionnaire_2, trips_joined$length_raw,
trips_joined$length_sim, trips_joined$dif_length, trips_joined$dem_gender, trips_joined$dem_age)
names(trip_record) <- c("participant", "device", "city", "group", "trip_count", "point_count", "trip_start", "trip_stop", "exper_start", "exper_end", "length_raw",
"length_sim", "dif_length", "gender", "age")
p_trips <- ggplot(trip_record, aes(x=trip_count, y=point_count, fill=city))
p_trips + geom_point()
p_trips <- ggplot(trip_record, aes(x=trip_count, y=point_count, group=city))
p_trips + geom_point()
p_trips <- ggplot(trip_record, aes(x=trip_count, y=point_count, fill=city))
p_trips + geom_point()
p_trips <- ggplot(trip_record, aes(x=trip_count, y=point_count, color=city))
p_trips + geom_point()
p_trips <- ggplot(trip_record, aes(x=participant, y=point_count, color=city))
p_trips + geom_point()
p_trips <- ggplot(trip_record, aes(x=participant, y=trip_count, color=city))
p_trips + geom_point()
p_trips <- ggplot(trip_record, aes(x=participant, y=trip_count, color=group))
p_trips + geom_point()
p_trips <- ggplot(trip_record, aes(x=participant, y=trip_count, color=gender))
p_trips + geom_point()
p_trips <- ggplot(trip_record, aes(x=participant, y=trip_count, color=age))
p_trips + geom_point()
p_trips <- ggplot(trip_record, aes(x=length_raw, y=point_count, color=age))
p_trips + geom_point()
p_trips <- ggplot(trip_record, aes(x=length_raw, y=point_count, color=city))
p_trips + geom_point()
p_trips + geom_point() + theme(legend.position = "bottom")
p_trips + geom_point() + theme(legend.position = "bottom") + geom_smooth()
p_trips <- ggplot(trip_record, aes(x=length_raw, y=point_count))
p_trips + geom_point() + theme(legend.position = "bottom") + geom_smooth()
p_trips <- ggplot(trip_record, aes(x=length_raw, y=point_count, color=city))
p_trips + geom_point() + theme(legend.position = "bottom") + geom_smooth()
p_trips <- ggplot(trip_record, aes(x=length_raw, y=length_sim, color=city))
p_trips + geom_point() + theme(legend.position = "bottom")
p_trips <- ggplot(trip_record, aes(x=length_raw, y=dif_length, color=city))
p_trips + geom_point() + theme(legend.position = "bottom")
location_record$day_time <-  format ( strptime(location_record$trip_start, format= "%Y-%m-%dT%H:%M:%OS"), "%H:%M:%OS")
location_record$trip_start
location_record
trip_record$trip_start
trip_record$day_time <-  format ( strptime(trip_record$trip_start, format= "%Y-%m-%dT%H:%M:%OS"), "%H:%M:%OS")
trip_record$day_time <- strptime(trip_record$day_time, format = "%H:%M:%OS")
trip_record$hour_day <- hour(trip_record$day_time) + minute(trip_record$day_time) / 60.0
trip_record$trip_length <- difftime( strptime(trip_record$trip_stop, format= "%Y-%m-%dT%H:%M:%OS"), strptime(trip_record$trip_start, format= "%Y-%m-%dT%H:%M:%OS"), units='mins')
trip_record$trip_start_experiment <- difftime ( strptime(trip_record$trip_start, format= "%Y-%m-%dT%H:%M:%OS"), strptime(trip_record$questionnaire1, format= "%Y-%m-%dT%H:%M:%OS"), units='days')
trip_record$trip_start
strptime(trip_record$trip_start, format= "%Y-%m-%dT%H:%M:%OS")
trip_record$trip_start_experiment <- difftime ( strptime(trip_record$trip_start, format= "%Y-%m-%dT%H:%M:%OS"), strptime(trip_record$exper_start, format= "%Y-%m-%dT%H:%M:%OS"), units='days')
trip_record$trip_stop_experiment <- difftime( strptime(as.character(trip_record$trip_stop), format= "%Y-%m-%dT%H:%M:%OS"), strptime(as.character(trip_record$exper_stop), format= "%Y-%m-%dT%H:%M:%OS") , units='days')
trip_record$trip_stop_experiment <- difftime( strptime(as.character(trip_record$trip_stop), format= "%Y-%m-%dT%H:%M:%OS"), strptime(as.character(trip_record$exper_start), format= "%Y-%m-%dT%H:%M:%OS") , units='days')
trip_record[which(trip_record$trip_length >= 0.5 & trip_record$trip_length <= 300.0),]$validation <- "Valid Time"
trip_record$trip_length
trip_record$validation <- "No Valid"
trip_record[which(trip_record$trip_length >= 0.5 & trip_record$trip_length <= 300.0),]$validation <- "Valid Time"
trip_record[which(!is.na(trip_record$length_raw) & trip_record$length_raw > 30),]$validation <- "Valid Distance"
trip_record[which(!is.na(trip_record$length_raw) & trip_record$length_raw > 30 & trip_record$trip_length >= 0.5 & trip_record$trip_length <= 300.0),]$validation <- "Valid"
p_trips <- ggplot(trip_record, aes(x=length_raw, y=time_length(), color=city))
p_trips + geom_point() + theme(legend.position = "bottom")
p_trips <- ggplot(trip_record, aes(x=length_raw, y=trip_le, color=city))
p_trips <- ggplot(trip_record, aes(x=length_raw, y=trip_length, color=city))
p_trips + geom_point() + theme(legend.position = "bottom")
p_trips + geom_point() + theme(legend.position = "bottom") + smooth()
p_trips + geom_point() + theme(legend.position = "bottom") + geom_smooth()
p_trips <- ggplot(trip_record, aes(x=length_raw/trip_length, y=length_raw, color=city))
p_trips + geom_point() + theme(legend.position = "bottom") + geom_smooth()
trip_record$avg_speed = trip_record$length_raw/(trip_record&trip_length/60)
trip_record$trip_length
trip_record&trip_length
trip_record$avg_speed = trip_record$length_raw/(trip_record$trip_length /60)
trip_record$avg_speed = trip_record$length_raw/(as.numeric(trip_record$trip_length) /60)
p_trips <- ggplot(trip_record, aes(x=length_raw, y=avg_speed, color=city))
p_trips + geom_point() + theme(legend.position = "bottom") + geom_smooth()
View(trip_record)
as.numeric(trip_record$trip_length)
as.numeric(trip_record$trip_length) /60
p_trips <- ggplot(trip_record, aes(x=trip_count, y=trip_length, color=city))
p_trips + geom_point() + theme(legend.position = "bottom") + geom_smooth()
p_trips <- ggplot(trip_record, aes(x=validation, y=trip_length, color=city))
p_trips + geom_point() + theme(legend.position = "bottom") + geom_smooth()
p_trips + geom_bar(stat = 'identity')
p_trips <- ggplot(trip_record, aes(x=validation, y=trip_length, fill=city))
p_trips + geom_bar(stat = 'identity')
p_trips <- ggplot(trip_record, aes(x=validation, fill=city))
p_trips + stat_count(stat = 'identity')
210/793
380/793
240/293
p_trips_no_valid <- ggplot(trip_record[trip_record&validation == "No Valid"], aes(x=trip_count, y=day_time))
p_trips_no_valid + geom_point() + theme(legend.position = "bottom")
p_trips_no_valid <- ggplot(trip_record[trip_record&validation == "No Valid"], aes(x=trip_count, y=day_time))
p_trips_no_valid <- ggplot(trip_record[trip_record&validation == "No Valid",], aes(x=trip_count, y=day_time))
trip_record[trip_record&validation == "No Valid",]
trip_record[trip_record&validation == "No Valid",]
trip_record$validation
trip_record[trip_record$validation == "No Valid",]
p_trips_no_valid <- ggplot(trip_record[trip_record$validation == "No Valid",], aes(x=trip_count, y=day_time))
p_trips_no_valid + geom_point() + theme(legend.position = "bottom")
p_trips_no_valid <- ggplot(trip_record[trip_record$validation == "No Valid",], aes(x=trip_count, y=day_time, fill=city))
p_trips_no_valid + geom_point() + theme(legend.position = "bottom")
p_trips_no_valid <- ggplot(trip_record[trip_record$validation == "No Valid",], aes(x=trip_count, y=day_time, color=city))
p_trips_no_valid + geom_point() + theme(legend.position = "bottom")
p_trips_no_valid <- ggplot(trip_record[trip_record$validation == "No Valid",], aes(x=participant, y=day_time, color=city))
p_trips_no_valid + geom_point() + theme(legend.position = "bottom")
p_trips_no_valid <- ggplot(trip_record[trip_record$validation == "No Valid",], aes(x=participant, y=trip_count, color=city))
p_trips_no_valid + geom_point() + theme(legend.position = "bottom")
p_trips_valid <- ggplot(trip_record, aes(x=participant, y=trip_count, color=validation))
p_trips_valid + geom_point() + theme(legend.position = "bottom")
p_trips_valid + stat_count(stat = 'identity') + theme(legend.position = "bottom")
p_trips_valid + stat_count() + theme(legend.position = "bottom")
p_trips <- ggplot(trip_record, aes(x=validation, fill=city))
p_trips + stat_count(stat = 'identity')
p_trips_valid <- ggplot(trip_record, aes(x=participant, color=validation))
p_trips_valid + stat_count(stat = 'identity') + theme(legend.position = "bottom")
p_trips_valid <- ggplot(trip_record, aes(x=participant, fill=validation))
p_trips_valid + stat_count(stat = 'identity') + theme(legend.position = "bottom")
p_trips_valid <- ggplot(trip_record[trip_record$validation == "No Valid",], aes(x=participant, fill=validation))
p_trips_valid + stat_count(stat = 'identity') + theme(legend.position = "bottom")
p_trips_valid + stat_count(stat = 'identity') + theme(legend.position = "bottom") + coord_flip()
p_trips_valid <- ggplot(trip_record, aes(x=participant, fill=validation))
p_trips_valid + stat_count(stat = 'identity') + theme(legend.position = "bottom") + coord_flip()
p_trips_valid + stat_count(stat = 'count') + theme(legend.position = "bottom") + coord_flip()
p_trips_valid + stat_count(stat = 'identity') + theme(legend.position = "bottom") + coord_flip()
p_trips_valid <- ggplot(trip_record[trip_record$validation != "No Valid",], aes(x=participant, fill=validation))
p_trips_valid + stat_count(stat = 'identity') + theme(legend.position = "bottom") + coord_flip()
p_trips_valid <- ggplot(trip_record[trip_record$validation == "Valid" | trip_record$validation == "Valid Distance" ,], aes(x=participant, fill=validation))
p_trips_valid + stat_count(stat = 'identity') + theme(legend.position = "bottom") + coord_flip()
p_trips_valid <- ggplot(trip_record[trip_record$validation == "Valid" | trip_record$validation == "Valid Distance" ,], aes(x=participant, y=length_raw, fill=validation))
p_trips_valid + geom_point() + theme(legend.position = "bottom") + coord_flip()
p_trips_valid <- ggplot(trip_record[trip_record$validation == "Valid" | trip_record$validation == "Valid Distance" ,], aes(x=participant, y=length_raw, color=validation))
p_trips_valid + geom_point() + theme(legend.position = "bottom") + coord_flip()
p_trips_valid <- ggplot(trip_record[trip_record$validation == "Valid" | trip_record$validation == "Valid Distance" ,], aes(x=length_trip, y=length_raw, color=validation))
p_trips_valid + geom_point() + theme(legend.position = "bottom") + coord_flip()
p_trips_valid <- ggplot(trip_record[trip_record$validation == "Valid" | trip_record$validation == "Valid Distance" ,], aes(x=trip_length, y=length_raw, color=validation))
p_trips_valid + geom_point() + theme(legend.position = "bottom") + coord_flip()
p_trips_valid <- ggplot(trip_record[trip_record$validation == "Valid" | trip_record$validation == "Valid Distance" ,], aes(x=day_time, y=length_raw, color=validation))
p_trips_valid + geom_point() + theme(legend.position = "bottom") + coord_flip()
p_trips_valid <- ggplot(trip_record[trip_record$validation == "Valid" | trip_record$validation == "Valid Distance" ,], aes(x=trip_start_experiment, y=length_raw, color=validation))
p_trips_valid + geom_point() + theme(legend.position = "bottom")
p_trips_valid + geom_point() + theme(legend.position = "bottom") + geom_smooth()
p_trips <- ggplot(trip_record, aes(x=validation, fill=city))
p_trips_valid <- ggplot(trip_record[trip_record$validation == "Valid" | trip_record$validation == "Valid Distance" ,], aes(x=trip_start_experiment, y=length_raw))
p_trips_valid + geom_point() + theme(legend.position = "bottom") + geom_smooth()
p_trips_valid <- ggplot(trip_record[trip_record$validation == "Valid" | trip_record$validation == "Valid Distance" ,], aes(x=trip_start_experiment, y=length_raw, color=participant))
p_trips_valid + geom_point() + theme(legend.position = "bottom") + geom_smooth()
p_trips_valid <- ggplot(trip_record[trip_record$validation == "Valid" | trip_record$validation == "Valid Distance" ,], aes(x=trip_start_experiment, y=length_raw, group=participant))
p_trips_valid + geom_point() + theme(legend.position = "bottom") + geom_smooth()
p_trips_valid <- ggplot(trip_record[trip_record$validation == "Valid" | trip_record$validation == "Valid Distance" ,], aes(x=trip_start_experiment, y=length_raw, fill=participant))
p_trips_valid + geom_point() + theme(legend.position = "bottom") + geom_smooth()
trip_record$trip_start_experiment
p_trips_valid <- ggplot(trip_record[trip_record$validation == "Valid" | trip_record$validation == "Valid Distance" ,], aes(x=as.int(trip_start_experiment), y=length_raw, fill=participant))
p_trips_valid + geom_point() + theme(legend.position = "bottom") + geom_smooth()
trip_record$trip_start_experiment
as.ingeger(trip_record$trip_start_experiment)
p_trips_valid <- ggplot(trip_record[trip_record$validation == "Valid" | trip_record$validation == "Valid Distance" ,], aes(x=as.int(trip_start_experiment), y=length_raw, fill=participant))
as.ingeger(trip_record$trip_start_experiment)
round(trip_record$trip_start_experiment, digits = 0)
round(trip_record$trip_start_experiment, digits = 0) + 1
trip_record$trip_day_experiment <- round(trip_record$trip_start_experiment, digits = 0) + 1
p_trips_valid <- ggplot(trip_record[trip_record$validation == "Valid" | trip_record$validation == "Valid Distance" ,], aes(x=trip_day_experiment, y=length_raw, fill=participant))
p_trips_valid + geom_point() + theme(legend.position = "bottom") + geom_smooth()
p_trips_no_valid <- ggplot(trip_record[trip_record$validation == "No Valid",], aes(x=trip_day_experiment, y=trip_count, color=city))
p_trips_no_valid + geom_point() + theme(legend.position = "bottom")
p_hist_all_trips <- ggplot(trip_record, aes(x=trip_day_experiment, fill=city))
p_hist_all_trips + stat_count(stat = 'count')
p_hist_all_trips <- ggplot(trip_record, aes(x=trip_day_experiment, fill=validation))
p_hist_all_trips + stat_count(stat = 'count')
p_hist_all_trips + stat_count(stat = 'count') + geom_smooth()
