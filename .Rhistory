library(spatstat)
################################################# define the network
x=c(0,2,2,3,4,4,5,5,4.7,4,1.5,2,2,4,4,5)
y=c(1,0.8,1,0.4,0,0.4,0.4,1.2,1,1,4,4,5,5,4,4)
M=matrix(FALSE,nrow=16,ncol = 16)
col1=c(0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0)
col2=c(0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0)
col3=c(1,1,0,0,0,0,0,0,0,1,0,1,0,0,0,0)
col4=c(0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0)
col5=c(0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0)
col6=c(0,0,0,1,1,0,1,0,0,1,0,0,0,0,0,0)
col7=c(0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0)
col8=c(0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0)
col9=c(0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0)
col10=c(0,0,1,0,0,1,0,0,1,0,0,0,0,0,1,0)
col11=c(0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0)
col12=c(0,0,1,0,0,0,0,0,0,0,1,0,1,0,1,0)
col13=c(0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0)
col14=c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0)
col15=c(0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,1)
col16=c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0)
M1=cbind(col1,col2,col3,col4,col5,col6,col7,col8,col9,col10,col11,col12,col13,col14,col15,col16)
for(i in 1:16){
for(j in 1:16){
if (M1[i,j]==1){M[i,j]<- TRUE}
}
}
vertices=ppp(x,y,window = owin(c(-0.01,5.1),c(-0.01,5.1)))
N=linnet(vertices,M)
##################################################################################
X <- rpoislpp(function(x,y){3*exp(-0.1*x)}, N)
plot(X,pch=20)
ox=X$data$x
oy=X$data$y
##################################################################################
d=crossdist.lpp(X,X)    #compute the distance between the observed data (Numerator)
min=rep(0,0)
for (i in 1:length(d[,1])){
min[i]=min(d[,i][d[,i]>0])
}
bw=max(min)+1   #bandwidth
partition=min(d[d>0])
t=seq(0.01,bw,by=partition)
t=c(t,bw)
ourvalues=rep(0,0) #define the vacant vector to save the densities per points
time1=proc.time()
for(i in 1:length(d[1,])){
distco=d[,i]
dens=0
for(j in 1:length(distco)){
if(distco[j]<=bw & distco[j]!=0){
den=0
for(k in 1:length(t) ){den=den+(3/(4*bw))*(1-((t[k]/bw)^2))*(lineardisc(N,c(ox[j],oy[j]),t[k])$endpoints$n)*partition}
dens=dens+((3/(4*bw))*(1-((distco[j]/bw)^2))/den)
}
}
ourvalues[i]=dens
}
time2=proc.time()
f=function(x,y){3*exp(-0.1*x)}
realintensity=f(ox,oy)
time3=proc.time()
sigma=bw
kernel = "gaussian"
continuous = FALSE
epsilon = 1e-06
verbose = TRUE
debug = FALSE
savehistory = TRUE
x=X
kernel <- match.kernel(kernel)
L <- as.linnet(x)
Llines <- as.psp(L)
linemask <- as.mask.psp(Llines)
lineimage <- as.im(linemask)
pixelcentres <- ppp(x$data$x, x$data$y, window = as.rectangle(linemask),
check = FALSE)
pixdf <- data.frame(x$data$x, x$data$y)
p2s <- project2segment(pixelcentres, Llines)
projloc <- as.data.frame(p2s$Xproj)
projmap <- as.data.frame(p2s[c("mapXY", "tp")])
projdata <- cbind(pixdf, projloc, projmap)
values <- rep(0, nrow(pixdf))
n <- npoints(x)
seg <- x$data$seg
tp <- x$data$tp
Llengths <- lengths.psp(Llines)
stack <- data.frame(seg = integer(0), from = logical(0),
distance = numeric(0), weight = numeric(0))
for (i in seq_len(n)) {
segi <- seg[i]
tpi <- tp[i]
len <- Llengths[segi]
relevant <- (projmap$mapXY == segi)
values[relevant] <- values[relevant] + dkernel(len *
(projmap$tp[relevant] - tpi), kernel, sd = 90)
stack <- rbind(data.frame(seg = c(segi, segi), from = c(TRUE,
FALSE), distance = len * c(tpi, 1 - tpi), weight = c(1,
1)), stack)
}
Lfrom <- L$from
Lto <- L$to
if (verbose)
niter <- 0
if (savehistory)
history <- data.frame(iter = integer(0), qlen = integer(0),
totmass = numeric(0), maxmass = numeric(0))
while (nrow(stack) > 0) {
if (debug)
print(stack)
masses <- with(stack, abs(weight) * pkernel(distance,
kernel = kernel, sd = sigma, lower.tail = FALSE))
totmass <- sum(masses)
maxmass <- max(masses)
if (savehistory)
history <- rbind(history, data.frame(iter = nrow(history) +
1, qlen = nrow(stack), totmass = totmass, maxmass = maxmass))
if (verbose) {
niter <- niter + 1
cat(paste("Iteration", niter, "\tStack length", nrow(stack),
"\n"))
cat(paste("Total stack mass", totmass, "\tMaximum",
maxmass, "\n"))
}
tiny <- (masses < epsilon)
if (any(tiny)) {
if (verbose) {
ntiny <- sum(tiny)
cat(paste("Removing", ntiny, "tiny", ngettext(ntiny,
"tail", "tails"), "\n"))
}
stack <- stack[!tiny, ]
}
if (nrow(stack) == 0)
break
H <- stack[1, , drop = FALSE]
stack <- stack[-1, , drop = FALSE]
Hseg <- H$seg
Hvert <- if (H$from)
Lfrom[Hseg]
else Lto[Hseg]
Hdist <- H$distance
incident <- which((Lfrom == Hvert) | (Lto == Hvert))
degree <- length(incident)
if (!continuous)
incident <- setdiff(incident, Hseg)
for (J in incident) {
lenJ <- Llengths[J]
H.is.from <- (Lfrom[J] == Hvert)
if (continuous) {
Jweight <- H$weight * (2/degree - (J == Hseg))
}
else {
Jweight <- H$weight/(degree - 1)
}
relevant <- (projmap$mapXY == J)
tp.rel <- projmap$tp[relevant]
d.rel <- lenJ * (if (H.is.from)
tp.rel
else (1 - tp.rel))
values[relevant] <- values[relevant] + Jweight *
dkernel(d.rel + Hdist, kernel = kernel, sd = sigma)
stack <- rbind(data.frame(seg = J, from = !(H.is.from),
distance = lenJ + Hdist, weight = Jweight), stack)
}
}
time4=proc.time()
##################################################
par(mfrow=c(2,1))
plot(ourvalues-realintensity,type="l")
title(main = "our estimation's error")
abline(h=0,col="red")
plot(values-realintensity,type="l")
title(main = "Okabe estimation's error")
abline(h=0,col="red")
plot(X,pch=20)
par(mfrow=c(1,1))
plot(X,pch=20)
plot(ourvalues-realintensity,type="l")
plot(ourvalues-realintensity,type="l",col="blue")
plot(ourvalues-realintensity,type="l",col="blue",ylab="Error")
abline(h=0)
points(values-realintensity,type="l",col="red")
plot(ourvalues-realintensity,type="l",col="blue",ylab="Error",ylim=c(-3,1))
abline(h=0)
points(values-realintensity,type="l",col="red")
legend(2,1,col=par("red","blue"))
legend(2,1,c("Okabe Error","Mehdi Error"),col=par("red","blue"),lty = c(1,1))
legend(2,1,c("Okabe Error","Mehdi Error"),col=par(red,blue),lty = c(1,1))
legend(2,1,c("Okabe Error","Mehdi Error"),col=par("red","blue"),lty = c(1,1))
legend(2,1,c("Okabe Error","Mehdi Error"),col=par("red","blue"),lty = c(1,1),type="l")
legend(2,1,c("Okabe Error","Mehdi Error"),col=c("red","blue"),lty = c(1,1))
bw
mean(ourvalues-realintensity)
mean(values-realintensity)
sd(ourvalues-realintensity)
sd(values-realintensity)
plot((ourvalues-realintensity)/42,type="l",col="blue")
points((values-realintensity)/42,type="l",col="red")
plot((ourvalues-realintensity)/42,type="l",col="blue",ylim=c(-0.07,0.03))
points((values-realintensity)/42,type="l",col="red")
abline(h=0)
legend(2,0.02,c("Okabe Error","Mehdi Error"),col=c("red","blue"),lty = c(1,1))
table_answers[,45:50]
table_answers = read.csv('data/Questionnaire_Answers.csv')
table_answers[,45:50]
table_answers = read.csv('data/Questionnaire_Answers.csv')
setwd("~/Documents/Experiment Data/MS_Analysis")
table_answers = read.csv('data/Questionnaire_Answers.csv')
table_answers[,45:50]
table_answers[,51:60]
table_answers[,61:69]
table_answers[,71:79]
table_answers[,77:79]
table_answers[,75:80]
answers_engagement$engagement_A1
answers_engagement <- table_answers[,75:80]
answers_engagement$engagement_A1
eng1_before_factor <- factor(answers_engagement$engagement_A1, likert_factors,labels = likert_labels)
likert_values <- c(-3,-2,-1,0,1,2,3)
likert_labels <- c("Strongly disagree"," ","  ","Neutral","   ","    ","Strongly agree")
likert_factors <- factor(likert_values)
eng1_before_factor <- factor(answers_engagement$engagement_A1, likert_factors,labels = likert_labels)
eng1_after_factor <- factor(answers_engagement$engagement_B1, likert_factors,labels = likert_labels)
eng1_factors <- data.frame(eng1_before_factor, eng1_after_factor)
eng1_likert <- likert(eng1_factors)
plot(eng1_likert)
eng1_likert <- likert(eng1_factors)
require(likert)
eng1_likert <- likert(eng1_factors)
plot(eng1_likert)
names(eng1_factors) <- t("Engagement with Cycling - Before", "Engagement with Cycling - After")
eng1_likert <- likert(eng1_factors)
plot(eng1_likert)
names(eng1_factors)
names(eng1_factors) <- t("Engagement with Cycling - Before", "Engagement with Cycling - After")
names(eng1_factors)
t("Engagement with Cycling - Before", "Engagement with Cycling - After")
c("Engagement with Cycling - Before", "Engagement with Cycling - After")
names(eng1_factors) <- c("Engagement with Cycling - Before", "Engagement with Cycling - After")
names(eng1_factors) <- c("Engagement with Cycling - Before", "Engagement with Cycling - After")
eng1_likert <- likert(eng1_factors)
plot(eng1_likert)
names(eng1_factors) <- c("With Cycling - Before", "With Cycling - After")
eng1_likert <- likert(eng1_factors)
plot(eng1_likert)
eng2_before_factor <- factor(answers_engagement$engagement_A2, likert_factors,labels = likert_labels)
eng2_after_factor <- factor(answers_engagement$engagement_B2, likert_factors,labels = likert_labels)
eng2_factors <- data.frame(eng2_before_factor, eng2_after_factor)
eng2_factors
answers_engagement
plot(eng2_likert)
plot(eng1_likert)
plot(eng2_likert)
eng2_likert <- likert(eng2_factors)
plot(eng2_likert)
eng3_before_factor <- factor(answers_engagement$engagement_A3, likert_factors,labels = likert_labels)
eng3_after_factor <- factor(answers_engagement$engagement_B3, likert_factors,labels = likert_labels)
eng3_factors <- data.frame(eng3_before_factor, eng3_after_factor)
names(eng3_factors) <- c("With Aps for Cycling - Before", "With Aps for Cycling - After")
eng3_likert <- likert(eng3_factors)
plot(eng3_likert)
eng_factors <- data.frame(eng1_before_factor,eng1_after_factor, eng2_before_factor, eng2_after_factor, eng3_before_factor, eng3_after_factor)
name(eng_factors) <- c("With Cycling - Before", "With Cycling - After", "With Mobile Games - Before", "With Mobile Games - After", "With Aps for Cycling - Before", "With Aps for Cycling - After")
eng_likert <- likert(eng_factors)
eng_factors <- data.frame(eng1_before_factor,eng1_after_factor, eng2_before_factor, eng2_after_factor, eng3_before_factor, eng3_after_factor)
name(eng_factors) <- c("With Cycling - Before", "With Cycling - After", "With Mobile Games - Before", "With Mobile Games - After", "With Aps for Cycling - Before", "With Aps for Cycling - After")
name(eng_factors)
names(eng_factors)
names(eng_factors) <- c("With Cycling - Before", "With Cycling - After", "With Mobile Games - Before", "With Mobile Games - After", "With Aps for Cycling - Before", "With Aps for Cycling - After")
names(eng_factors) <- c("With Cycling - Before", "With Cycling - After", "With Mobile Games - Before", "With Mobile Games - After", "With Aps for Cycling - Before", "With Aps for Cycling - After")
eng_likert <- likert(eng_factors)
plot(eng_likert)
pdf("graphs/engagement.pdf")
plot(eng_likert)
dev.off()
satis_before_factor <- factor(table_answers$profile_cycling_1, likert_factors, labels = likert_labels)
View(table_answers)
satis_after_factor <- factor(table_answers$satisfaction_cycling, likert_factors, labels = likert_labels)
require(likert)
table_answers = read.csv('data/Questionnaire_Answers.csv')
likert_values <- c(-3,-2,-1,0,1,2,3)
likert_labels <- c("Strongly disagree"," ","  ","Neutral","   ","    ","Strongly agree")
likert_factors <- factor(likert_values)
satis_before_factor <- factor(table_answers$profile_cycling_1, likert_factors, labels = likert_labels)
satis_after_factor <- factor(table_answers$satisfaction_cycling, likert_factors, labels = likert_labels)
satis_factors <- data.frame(satis_before_factor, satis_after_factor)
names(satis_factors) <- c("With Cycling - Before", "With Cycling - After")
satis_likert <- likert(satis_factors)
plot(satis_likert)
pdf("graphs/sastisfaction.pdf")
plot(satis_likert)
dev.off()
View(table_answers)
table_answers[,75:86]
answers_engagement <- table_answers[,75:86]
eng_future_cycling_factor <- factor(answers_engagement$engagement_cycling_2w, likert_factors,labels = likert_labels)
eng_future_cycling2_factor <- factor(answers_engagement$engagement_cycling_future, likert_factors,labels = likert_labels)
eng_future_cycling <- data.frame(eng_future_cycling_factor, eng_future_cycling2_factor)
names(eng_future_cycling) <- c("I intend to bicycle in the next 2 weeks","I intend to use a bicycle in the future" )
eng_future_cycling_likert <- likert(eng_future_cycling)
plot(eng_future_cycling_likert)
eng_future_cycling <- data.frame(eng_future_cycling_factor, eng_future_cycling2_factor)
names(eng_future_cycling) <- c("I intend to bicycle in the next 2 weeks","I intend to use a bicycle in the future" )
names(eng_future_cycling)
eng_future_cycling_likert <- likert(eng_future_cycling)
plot(eng_future_cycling_likert)
eng_future_cycling_likert
plot(eng_future_cycling_likert)
eng3_likert
eng_future_cycling
plot(eng_future_cycling_likert, na.rm=TRUE)
eng_future_cycling_likert <- likert(eng_future_cycling, na.rm=TRUE)
plot(eng_likert)
eng_factors
eng_future_cycling <- data.frame(eng1_before_factor, eng1_after_factor, eng_future_cycling_factor, eng_future_cycling2_factor)
eng_future_cycling <- data.frame(eng1_before_factor, eng1_after_factor, eng_future_cycling_factor, eng_future_cycling2_factor)
names(eng_future_cycling) <- c("With Cycling - Before", "With Cycling - After", "I intend to bicycle in the next 2 weeks","I intend to use a bicycle in the future" )
eng_future_cycling_likert <- likert(eng_future_cycling, na.rm=TRUE)
plot(eng_future_cycling_likert)
names(eng_future_cycling)
likert(eng_future_cycling, na.rm=TRUE)
likert(eng_future_cycling, na.rm=TRUE)
likert(eng_future_cycling, na.rm=TRUE)
likert(eng_future_cycling, na.rm=TRUE)
likert(eng_future_cycling, na.rm=TRUE)
eng_future_cycling_likert <- likert(eng_future_cycling)
plot(eng_future_cycling_likert)
eng_future_app_factor <- factor(answers_engagement$engagement_app_2w, likert_factors,labels = likert_labels)
eng_future_app2_factor <- factor(answers_engagement$engagement_app_future, likert_factors,labels = likert_labels)
eng_future_any_app_factor <- factor(answers_engagement$engagement_any_app_2w, likert_factors,labels = likert_labels)
eng_future_any_app2_factor <- factor(answers_engagement$engagement_any_app_future, likert_factors,labels = likert_labels)
eng_future_cycling <- data.frame(eng_future_cycling_factor, eng_future_cycling2_factor, eng_future_app_factor, eng_future_app2_factor, eng_future_any_app_factor, eng_future_any_app2_factor)
eng_future_cycling_likert <- likert(eng_future_cycling)
plot(eng_future_cycling_likert)
names(eng_future_cycling) <- c("I intend to bicycle in the next 2 weeks","I intend to use a bicycle in the future", "I intend to use the given app in the next 2 weeks","I intend to use the given app in the future","I intend to use an app while cycling in the next 2 weeks","I intend to use an app while cycling in the future")
eng_future_cycling_likert <- likert(eng_future_cycling)
plot(eng_future_cycling_likert)
pdf("graphs/engagement_future.pdf")
plot(eng_future_cycling_likert)
dev.off()
table_answers = read.csv('data/Questionnaire_Answers.csv')
answers_ages = table_answers[,4]
age_histogram <- hist(answers_ages, breaks=4, main = "")
age_density <- density(table_answers[,4])
lines(lines(age_density$x,age_density$y*(1/sum(age_histogram$density))*length(answers_ages)))
pdf("graphs/age_participants.pdf")
age_histogram <- hist(answers_ages, breaks=4, main = "")
lines(lines(age_density$x,age_density$y*(1/sum(age_histogram$density))*length(answers_ages)))
dev.off()
transport_labels <- c("I use my private car","By public transport (including Taxi)","By bicycle","By walking")
answers_transport <- table_answers[,8:11]
transports_total <- data.frame( modes=transport_labels, count=colSums(answers_transport, na.rm=TRUE) )
ggplot(transports_total, aes(modes, count)) + geom_col()
pdf("graphs/transport_participants.pdf")
ggplot(transports_total, aes(modes, count)) + geom_col()
dev.off()
ggplot(transports_total, aes(modes, count)) + geom_col()
transport_labels <- c("I use my private car","By public transport (including Taxi)","By bicycle","By walking")
answers_transport <- table_answers[,8:11]
transports_total <- data.frame( modes=transport_labels, count=colSums(answers_transport, na.rm=TRUE) )
ggplot(transports_total, aes(modes, count)) + geom_col()
pdf("graphs/transport_participants.pdf")
ggplot(transports_total, aes(modes, count)) + geom_col()
dev.off()
require(likert)
table_answers = read.csv('data/Questionnaire_Answers.csv')
likert_values <- c(-3,-2,-1,0,1,2,3)
likert_labels <- c("Strongly disagree"," ","  ","Neutral","   ","    ","Strongly agree")
likert_factors <- factor(likert_values)
plot(satis_likert)
require(likert)
table_answers = read.csv('data/Questionnaire_Answers.csv')
likert_values <- c(-3,-2,-1,0,1,2,3)
likert_labels <- c("Strongly disagree"," ","  ","Neutral","   ","    ","Strongly agree")
likert_factors <- factor(likert_values)
satis_before_factor <- factor(table_answers$profile_cycling_1, likert_factors, labels = likert_labels)
satis_after_factor <- factor(table_answers$satisfaction_cycling, likert_factors, labels = likert_labels)
satis_factors <- data.frame(satis_before_factor, satis_after_factor)
names(satis_factors) <- c("With Cycling - Before", "With Cycling - After")
satis_likert <- likert(satis_factors)
plot(satis_likert)
View(satis_factors)
View(satis_factors)
View(table_answers)
View(table_answers)
require(likert)
table_answers = read.csv('data/Questionnaire_Answers.csv')
likert_values <- c(-3,-2,-1,0,1,2,3)
likert_labels <- c("Strongly disagree"," ","  ","Neutral","   ","    ","Strongly agree")
likert_factors <- factor(likert_values)
compet1_factor <- factor(table_answers$competition_1, likert_factors, labels = likert_labels)
collab1_factor <- factor(table_answers$collaboration_1, likert_factors, labels = likert_labels)
compet2_factor <- factor(table_answers$competition_2, likert_factors, labels = likert_labels)
collab2_factor <- factor(table_answers$collaboration_2, likert_factors, labels = likert_labels)
compet3_factor <- factor(table_answers$competition_3, likert_factors, labels = likert_labels)
collab3_factor <- factor(table_answers$collaboration_3, likert_factors, labels = likert_labels)
comparison1_factors <- data.frame(compet1_factor, collab1_factor)
names(comparison1_factors) <- c("I found competing against other cyclists enjoyable", "I found collaborating with other cyclists enjoyable")
comparison1_likert <- likert(comparison1_factors)
plot(comparison1_likert)
require(likert)
table_answers = read.csv('data/Questionnaire_Answers.csv')
likert_values <- c(-3,-2,-1,0,1,2,3)
likert_labels <- c("Strongly disagree"," ","  ","Neutral","   ","    ","Strongly agree")
likert_factors <- factor(likert_values)
compet1_factor <- factor(table_answers$competition_1, likert_factors, labels = likert_labels)
collab1_factor <- factor(table_answers$collaboration_1, likert_factors, labels = likert_labels)
compet2_factor <- factor(table_answers$competition_2, likert_factors, labels = likert_labels)
collab2_factor <- factor(table_answers$collaboration_2, likert_factors, labels = likert_labels)
compet3_factor <- factor(table_answers$competition_3, likert_factors, labels = likert_labels)
collab3_factor <- factor(table_answers$collaboration_3, likert_factors, labels = likert_labels)
comparison1_factors <- data.frame(compet1_factor, collab1_factor)
names(comparison1_factors) <- c("I found competing against other cyclists enjoyable", "I found collaborating with other cyclists enjoyable")
comparison1_likert <- likert(comparison1_factors)
plot(comparison1_likert)
pdf("graphs/comparison.pdf")
plot(comparison1_likert)
dev.off()
comparison_factors <- data.frame(compet1_factor,collab1_factor,compet2_factor,collab2_factor,compet3_factor,collab3_factor)
names(comparison_factors) <- c("I found competing against other cyclists enjoyable", "I found collaborating with other cyclists enjoyable","I enjoyed checking my own progress with the app","I enjoyed checking my contribution with the app","I enjoyed checking my position on the leaderboard","I wanted to check my position on a leaderboard")
comparison_likert <- likert(comparison_factors)
plot(comparison_likert)
pdf("graphs/sastisfaction_full.pdf")
plot(comparison_likert)
dev.off()
pdf("graphs/comparison_full.pdf")
plot(comparison_likert)
dev.off()
pdf("graphs/comparison.pdf")
plot(comparison1_likert, centered = FALSE) + ggtitle("title")
dev.off()
experim_experiment_factor <- factor(table_answers$engagement_1, likert_factors, labels = likert_labels)
experim_experiment_app_factor <- factor(table_answers$engagement_2, likert_factors, labels = likert_labels)
eng_experim <- data.frame(experim_experiment_factor, experim_experiment_app_factor)
names(eng_experim) <- c("cycling during the experiment","using the given app")
eng_experim_likert <- likert(eng_experim)
plot(eng_experim)
pdf("graphs/engagement_experiment.pdf")
plot(eng_experim)
dev.off()
experim_experiment_factor
table_answers$engagement_1
table_answers$engagement_2
eng_experim
names(eng_experim)
eng_experim_likert
plot(eng_experim_likert)
pdf("graphs/engagement_experiment.pdf")
plot(eng_experim_likert)
dev.off()
