facet_grid(city ~ .) +
theme(legend.position="bottom")
library(tm)
library(SnowballC)
library(wordcloud)
library(ggplot2)
ggplot(table_tags_polarity_joined[!is.na(table_tags_polarity_joined$city),], aes(participant, tag_coung )) +
geom_point(aes(colour = factor(sentiment_polarity))) +
theme_bw() +
facet_grid(city ~ .) +
theme(legend.position="bottom")
library(tm)
library(SnowballC)
library(wordcloud)
library(ggplot2)
table_participants = read.csv('data/Cyclist_Experiment.csv')
table_tags <- read.csv('data/Cyclist_Tag.csv', sep = '\t')
table_tags_polarity <- read.csv('data/Tags_polarity.csv')
tags_participants = merge(table_tags,table_participants)
tags_participants$campaign_day = as.Date(tags_participants$X_created_at) - as.Date(tags_participants$questionnaire1) +1
table_tags_polarity_joined <- merge(tags_participants[!is.na(tags_participants$campaign_day),], table_tags_polarity, all = TRUE)
table_tags_polarity_joined$participant[table_tags_polarity_joined$city == "Castelló" & !is.na(table_tags_polarity_joined$participant)] <-
table_tags_polarity_joined$participant[table_tags_polarity_joined$city == "Castelló"& !is.na(table_tags_polarity_joined$participant)] - 20
table_tags_polarity_joined$participant[table_tags_polarity_joined$city == "Malta" & !is.na(table_tags_polarity_joined$participant)] <-
table_tags_polarity_joined$participant[table_tags_polarity_joined$city == "Malta"& !is.na(table_tags_polarity_joined$participant)] - 40
new_tags <- table_tags_polarity_joined[is.na(table_tags_sense_joined$sentiment_polarity),]
polarised_tags <- table_tags_polarity_joined[!is.na(table_tags_sense_joined$sentiment_polarity),]
docs <- Corpus( VectorSource( as.String(table_tags_polarity_joined$text_en) ) )
inspect(docs)
new_tags
table_tags_polarity_joined[is.na(table_tags_sense_joined$sentiment_polarity),]
table_participants = read.csv('data/Cyclist_Experiment.csv')
table_tags <- read.csv('data/Cyclist_Tag.csv', sep = '\t')
table_tags_polarity <- read.csv('data/Tags_polarity.csv')
tags_participants = merge(table_tags,table_participants)
tags_participants$campaign_day = as.Date(tags_participants$X_created_at) - as.Date(tags_participants$questionnaire1) +1
table_tags_polarity_joined <- merge(tags_participants[!is.na(tags_participants$campaign_day),], table_tags_polarity, all = TRUE)
View(table_tags_polarity_joined)
ggplot(table_tags_polarity_joined, aes(x=sentimen_polarity)) + geom_bar(stat="count")
ggplot(table_tags_polarity_joined, aes(x=sentiment_polarity)) + geom_bar(stat="count")
ggplot(table_tags_polarity_joined, aes(x=sentiment_polarity)) + geom_bar(stat="count") + geom_label(stat="count")
ggplot(table_tags_polarity_joined, aes(x=sentiment_polarity)) + geom_bar(stat="count") + geom_label(stat="count", aes(aes(label=..count..),vjust=2 ))
ggplot(table_tags_polarity_joined, aes(x=sentiment_polarity)) + geom_bar(stat="count") + geom_label(stat="count", aes(aes(label=..count..),vjust=2 ))
ggplot(table_tags_polarity_joined, aes(x=sentiment_polarity)) + geom_bar(stat="count") + geom_label(stat="count", aes(label=..count..,vjust=2 ))
require(likert)
table_answers = read.csv('data/Questionnaire_Answers.csv')
likert_values <- c(-3,-2,-1,0,1,2,3)
likert_labels <- c("Strongly disagree (-3)","(-2)","(-1)","Neutral (0)","(1)","(2)","Strongly agree (3)")
likert_factors <- factor(likert_values)
satis_before_factor <- factor(table_answers$profile_cycling_1, likert_factors, labels = likert_labels )
satis_after_factor <- factor(table_answers$satisfaction_cycling, likert_factors, labels = likert_labels )
likert_labels_satisfaction <- c("Very dissatisfied (-3)","(-2)","(-1)","Neutral (0)","(1)","(2)","Very satisfied (3)")
satis_cycling_during_ex_factor <- factor(table_answers$satisfaction_app_1, likert_factors, labels = likert_labels_satisfaction)
satis_app_during_ex_factor <- factor(table_answers$satisfaction_app_2, likert_factors, labels = likert_labels_satisfaction)
satis_cycling_during_ex <- data.frame(satis_app_during_ex_factor, satis_cycling_during_ex_factor)
names
title <- "During the experiment, how satisfied or dissatisfied were with:"
names(satis_cycling_during_ex) <- c("Cycling?", "The Mobile App?")
satis_cycling_during_ex_likert <- likert(satis_cycling_during_ex)
plot(satis_cycling_during_ex_likert) + ggtitle(title) + theme(plot.title = element_text(hjust = 0.5)) +
guides(fill=guide_legend(title=NULL, nrow = 1))
svg(filename="graphs/A_sastisfaction_graph2.svg",
width=6.5, height=3, pointsize=10)
plot(satis_cycling_during_ex_likert) + ggtitle(title) + theme(plot.title = element_text(hjust = 0.5)) +
guides(fill=guide_legend(title=NULL, nrow = 1))
dev.off()
satisfaction <- data.frame(table_answers$participant, table_answers$City, table_answers$group, table_answers$profile_cycling_1, table_answers$satisfaction_1)
names(satisfaction) <- c("participant", "city", "group", "s_cycling", "s_during_experiment")
satisfaction_general <- data.frame(satisfaction$participant, satisfaction$city, satisfaction$group, satisfaction$s_cycling)
names(satisfaction_general) <- c("participant", "city", "group", "satisfaction")
satisfaction_general$context <- "General"
satisfaction_experiment <- data.frame(satisfaction$participant, satisfaction$city, satisfaction$group, satisfaction$s_during_experiment)
names(satisfaction_experiment) <- c("participant", "city", "group", "satisfaction")
satisfaction_experiment$context <- "Experiment"
satisfaction_context <- rbind(satisfaction_general, satisfaction_experiment)
library(sjmisc)
library(dplyr)
library(knitr)
library(ggplot2)
library(Hmisc)
library(effsize)
source("scripts/setup.R")
themeMod <- theme_bw() +
theme(legend.position = "none", axis.text.y = element_text(hjust = 1))
theme_set(themeMod)
myFill <- function(...){
scale_fill_manual(values = alpha(c("#5ab4ac","#d8b365", "#f5f5f5"),0.8),...)
}
scale_fill_discrete <- myFill
table_answers <- table_answers[table_answers$group != "none",]
satisfaction <- data.frame(table_answers$participant, table_answers$City, table_answers$group, table_answers$profile_cycling_1, table_answers$satisfaction_1)
names(satisfaction) <- c("participant", "city", "group", "s_cycling", "s_during_experiment")
satisfaction_general <- data.frame(satisfaction$participant, satisfaction$city, satisfaction$group, satisfaction$s_cycling)
names(satisfaction_general) <- c("participant", "city", "group", "satisfaction")
satisfaction_general$context <- "General"
satisfaction_experiment <- data.frame(satisfaction$participant, satisfaction$city, satisfaction$group, satisfaction$s_during_experiment)
names(satisfaction_experiment) <- c("participant", "city", "group", "satisfaction")
satisfaction_experiment$context <- "Experiment"
satisfaction_context <- rbind(satisfaction_general, satisfaction_experiment)
View(table_answers)
likert_labels_satisfaction <- c("Very dissatisfied (-3)","(-2)","(-1)","Neutral (0)","(1)","(2)","Very satisfied (3)")
satis_cycling_during_ex_factor <- factor(table_answers$satisfaction_1, likert_factors, labels = likert_labels_satisfaction)
satis_cycling_factor <- factor(table_answers$satisfaction_1, likert_factors, labels = likert_labels_satisfaction)
likert_labels_satisfaction <- c("Very dissatisfied (-3)","(-2)","(-1)","Neutral (0)","(1)","(2)","Very satisfied (3)")
satis_cycling_factor <- factor(table_answers$profile_cycling_1, likert_factors, labels = likert_labels_satisfaction)
satis_cycling_during_ex_factor <- factor(table_answers$satisfaction_1, likert_factors, labels = likert_labels_satisfaction)
satis_cycling_during_ex <- data.frame(satis_cycling_factor, satis_cycling_during_ex_factor)
title <- "I found cycling enjoyable / Cycling during the experiment:"
names(satis_cycling_during_ex) <- c("Before", "Experiment")
satis_cycling_during_ex_likert <- likert(satis_cycling_during_ex)
plot(satis_cycling_during_ex_likert) + ggtitle(title) + theme(plot.title = element_text(hjust = 0.5)) +
guides(fill=guide_legend(title=NULL, nrow = 1))
svg(filename="graphs/A_sastisfaction_graph2.svg",
width=6.5, height=3, pointsize=10)
plot(satis_cycling_during_ex_likert) + ggtitle(title) + theme(plot.title = element_text(hjust = 0.5)) +
guides(fill=guide_legend(title=NULL, nrow = 1))
dev.off()
library(sjmisc)
library(dplyr)
library(knitr)
library(ggplot2)
library(Hmisc)
library(effsize)
source("scripts/setup.R")
themeMod <- theme_bw() +
theme(legend.position = "none", axis.text.y = element_text(hjust = 1))
theme_set(themeMod)
myFill <- function(...){
scale_fill_manual(values = alpha(c("#5ab4ac","#d8b365", "#f5f5f5"),0.8),...)
}
scale_fill_discrete <- myFill
table_answers <- table_answers[table_answers$group != "none",]
enjoyment <- data.frame(table_answers$participant, table_answers$City, table_answers$group, table_answers$collaboration_1, table_answers$competition_1)
names(enjoyment) <- c("participant", "city", "group", "e_collaboration", "e_competition")
enjoyment$enj_functionality <- NA
enjoyment[enjoyment$group == "Collaboration",]$enj_functionality <- enjoyment[enjoyment$group == "Collaboration",]$e_collaboration
enjoyment[enjoyment$group == "Competition",]$enj_functionality <- enjoyment[enjoyment$group == "Competition",]$e_competition
enjoyment_collaboration <- enjoyment[enjoyment$group == "Collaboration",]
enjoyment_competition <- enjoyment[enjoyment$group == "Competition",]
enjoyment_group <- rbind(enjoyment_collaboration, enjoyment_competition)
shapiro.test(enjoyment_collaboration$enj_functionality)
t.test(enjoyment_collaboration$enj_functionality, enjoyment_competition$enj_functionality)
cohen.d(enjoyment_collaboration$enj_functionality, enjoyment_competition$enj_functionality, na.rm = TRUE)
library(sjmisc)
library(dplyr)
library(knitr)
library(ggplot2)
library(Hmisc)
library(effsize)
source("scripts/setup.R")
themeMod <- theme_bw() +
theme(legend.position = "none", axis.text.y = element_text(hjust = 1))
theme_set(themeMod)
myFill <- function(...){
scale_fill_manual(values = alpha(c("#5ab4ac","#d8b365", "#f5f5f5"),0.8),...)
}
scale_fill_discrete <- myFill
table_answers <- table_answers[table_answers$group != "none",]
satisfaction_before <- data.frame(table_answers$participant, table_answers$City, table_answers$group, table_answers$profile_cycling_1)
names(satisfaction_before) <- c("participant", "city", "group", "satisfaction")
satisfaction_before$time <- "Before"
satisfaction_after <- data.frame(table_answers$participant, table_answers$City, table_answers$group, table_answers$satisfaction_cycling)
names(satisfaction_after) <- c("participant", "city", "group", "satisfaction")
satisfaction_after$time <- "After"
answers_satisfaction_paired <- rbind(satisfaction_before, satisfaction_after)
satisfaction_competition <- answers_satisfaction_paired[answers_satisfaction_paired$group == "Competition",]
satisfaction_competition_before <- satisfaction_before[satisfaction_before$group == "Competition",]
satisfaction_competition_after <- satisfaction_after[satisfaction_after$group == "Competition",]
satisfaction_collaboration <- answers_satisfaction_paired[answers_satisfaction_paired$group == "Collaboration",]
satisfaction_collaboration_before <- satisfaction_before[satisfaction_before$group == "Collaboration",]
satisfaction_collaboration_after <- satisfaction_after[satisfaction_after$group == "Collaboration",]
t.test(satisfaction_before$satisfaction, satisfaction_after$satisfaction )
t.test(satisfaction_competition_before$satisfaction, satisfaction_competition_after$satisfaction )
t.test(answers_satisfaction_collaboration_before$satisfaction, answers_satisfaction_collaboration_after$satisfaction)
answers_satisfaction_collaboration_before
satisfaction_before <- data.frame(table_answers$participant, table_answers$City, table_answers$group, table_answers$profile_cycling_1)
names(satisfaction_before) <- c("participant", "city", "group", "satisfaction")
satisfaction_before$time <- "Before"
satisfaction_after <- data.frame(table_answers$participant, table_answers$City, table_answers$group, table_answers$satisfaction_cycling)
names(satisfaction_after) <- c("participant", "city", "group", "satisfaction")
satisfaction_after$time <- "After"
answers_satisfaction_paired <- rbind(satisfaction_before, satisfaction_after)
satisfaction_competition <- answers_satisfaction_paired[answers_satisfaction_paired$group == "Competition",]
satisfaction_competition_before <- satisfaction_before[satisfaction_before$group == "Competition",]
satisfaction_competition_after <- satisfaction_after[satisfaction_after$group == "Competition",]
satisfaction_collaboration <- answers_satisfaction_paired[answers_satisfaction_paired$group == "Collaboration",]
satisfaction_collaboration_before <- satisfaction_before[satisfaction_before$group == "Collaboration",]
satisfaction_collaboration_after <- satisfaction_after[satisfaction_after$group == "Collaboration",]
t.test(answers_satisfaction_collaboration_before$satisfaction, answers_satisfaction_collaboration_after$satisfaction)
t.test(satisfaction_collaboration_before$satisfaction, satisfaction_collaboration_after$satisfaction)
engagement_before <- data.frame(table_answers$participant, table_answers$City, table_answers$group, table_answers$engagement_A1)
names(engagement_before) <- c("participant", "city", "group", "engagement")
engagement_before$time <- "Before"
engagement_after <- data.frame(table_answers$participant, table_answers$City, table_answers$group, table_answers$engagement_B1)
names(engagement_after) <- c("participant", "city", "group", "engagement")
engagement_after$time <- "After"
engagement_paired <- rbind(engagement_before, engagement_after)
engagement_competition <- engagement_paired[engagement_paired$group == "Competition",]
engagement_competition_before <- engagement_before[engagement_before$group == "Competition",]
engagement_competition_after <- engagement_after[engagement_after$group == "Competition",]
engagement_collaboration <- engagement_paired[engagement_paired$group == "Collaboration",]
engagement_collaboration_before <- engagement_before[engagement_before$group == "Collaboration",]
engagement_collaboration_after <- engagement_after[engagement_after$group == "Collaboration",]
t.test(engagement_before$engagement, engagement_after$engagement )
t.test(engagement_competition_before$engagement, engagement_competition_after$engagement )
t.test(engagement_collaboration_before$engagement, engagement_collaboration_after$engagement)
library(ggplot2)
table_answers <- read.csv('data/Questionnaire_Answers.csv', stringsAsFactors=FALSE)
table_answers <- table_answers[table_answers$City == "Münster",]
table_answers <- table_answers[which( table_answers$competition_1 >= -3 ),]
app_cycling <- data.frame(table_answers$gaming_app_cycling_googlefit, table_answers$gaming_app_cycling_bikecitizens, table_answers$gaming_app_cycling_endomondo,
table_answers$gaming_app_cycling_fitbit, table_answers$gaming_app_cycling_human, table_answers$gaming_app_cycling_runtastic, table_answers$gaming_app_cycling_strava,
table_answers$gaming_app_cycling_wikiloc, table_answers$gaming_app_cycling_other, table_answers$gaming_app_cycling)
names(app_cycling) <- c( " google_fit", " bikecitizens", " endomondo", " fitbit", " human", " runtastic", " strava", " wikiloc", "other", "using_no_app")
app_cycling[app_cycling$using_no_app != "N",]$using_no_app <- NA
app_cycling[app_cycling$other == "",]$other <- NA
count_app_cycling <- sapply(app_cycling, function(y) sum(length(which(!is.na(y)))))
data <- data.frame( names(count_app_cycling), count_app_cycling )
names(data) <- c("application", "count")
ggplot(data, aes(x = application, y = count ,fill = application)) +
geom_bar(width = 0.85, stat="identity") +
coord_polar(theta = "y") +    # To use a polar plot and not a basic barplot
xlab("") + ylab("") +    #Remove useless labels of axis
ylim(c(0,33)) + #Increase ylim to avoid having a complete circle
geom_text(data = data, hjust = 1, size = 3, aes(x = application, y = 0, label = application)) +   #Add group labels close to the bars :
theme(legend.position = "none" , axis.text.y = element_blank() , axis.ticks = element_blank())    #Remove useless legend, y axis ticks and y axis text
ggplot(data, aes(x = application, y = count ,fill = application)) +
geom_bar(width = 0.85, stat="identity") +
coord_polar(theta = "y") +    # To use a polar plot and not a basic barplot
xlab("") + ylab("") +    #Remove useless labels of axis
ylim(c(0,20)) + #Increase ylim to avoid having a complete circle
geom_text(data = data, hjust = 1, size = 3, aes(x = application, y = 0, label = application)) +   #Add group labels close to the bars :
theme(legend.position = "none" , axis.text.y = element_blank() , axis.ticks = element_blank())    #Remove useless legend, y axis ticks and y axis text
table_answers <- read.csv('data/Questionnaire_Answers.csv', stringsAsFactors=FALSE)
app_cycling <- data.frame(table_answers$gaming_app_cycling_googlefit, table_answers$gaming_app_cycling_bikecitizens, table_answers$gaming_app_cycling_endomondo,
table_answers$gaming_app_cycling_fitbit, table_answers$gaming_app_cycling_human, table_answers$gaming_app_cycling_runtastic, table_answers$gaming_app_cycling_strava,
table_answers$gaming_app_cycling_wikiloc, table_answers$gaming_app_cycling_other, table_answers$gaming_app_cycling)
names(app_cycling) <- c( " google_fit", " bikecitizens", " endomondo", " fitbit", " human", " runtastic", " strava", " wikiloc", "other", "using_no_app")
app_cycling[app_cycling$using_no_app != "N",]$using_no_app <- NA
app_cycling[app_cycling$other == "",]$other <- NA
count_app_cycling <- sapply(app_cycling, function(y) sum(length(which(!is.na(y)))))
data <- data.frame( names(count_app_cycling), count_app_cycling )
names(data) <- c("application", "count")
ggplot(data, aes(x = application, y = count ,fill = application)) +
geom_bar(width = 0.85, stat="identity") +
coord_polar(theta = "y") +    # To use a polar plot and not a basic barplot
xlab("") + ylab("") +    #Remove useless labels of axis
ylim(c(0,33)) + #Increase ylim to avoid having a complete circle
geom_text(data = data, hjust = 1, size = 3, aes(x = application, y = 0, label = application)) +   #Add group labels close to the bars :
theme(legend.position = "none" , axis.text.y = element_blank() , axis.ticks = element_blank())    #Remove useless legend, y axis ticks and y axis text
ggplot(data, aes(x = application, y = count ,fill = application)) +
geom_bar(width = 0.85, stat="identity") +
coord_polar(theta = "y") +    # To use a polar plot and not a basic barplot
xlab("") + ylab("") +    #Remove useless labels of axis
ylim(c(0,20)) + #Increase ylim to avoid having a complete circle
geom_text(data = data, hjust = 1, size = 3, aes(x = application, y = 0, label = application)) +   #Add group labels close to the bars :
theme(legend.position = "none" , axis.text.y = element_blank() , axis.ticks = element_blank())    #Remove useless legend, y axis ticks and y axis text
ggplot(data, aes(x = application, y = count ,fill = application)) +
geom_bar(width = 0.85, stat="identity") +
coord_polar(theta = "y") +    # To use a polar plot and not a basic barplot
xlab("") + ylab("") +    #Remove useless labels of axis
ylim(c(0,33)) + #Increase ylim to avoid having a complete circle
geom_text(data = data, hjust = 1, size = 3, aes(x = application, y = 0, label = application)) +   #Add group labels close to the bars :
theme(legend.position = "none" , axis.text.y = element_blank() , axis.ticks = element_blank())    #Remove useless legend, y axis ticks and y axis text
View(app_cycling)
View(app_cycling)
table_answers <- read.csv('data/Questionnaire_Answers.csv', stringsAsFactors=FALSE)
app_cycling <- data.frame(table_answers$gaming_app_cycling_googlefit, table_answers$gaming_app_cycling_bikecitizens, table_answers$gaming_app_cycling_endomondo,
table_answers$gaming_app_cycling_fitbit, table_answers$gaming_app_cycling_human, table_answers$gaming_app_cycling_runtastic, table_answers$gaming_app_cycling_strava,
table_answers$gaming_app_cycling_wikiloc, table_answers$gaming_app_cycling_other, table_answers$gaming_app_cycling)
names(app_cycling) <- c( " google_fit", " bikecitizens", " endomondo", " fitbit", " human", " runtastic", " strava", " wikiloc", "other", "using_no_app")
app_cycling[app_cycling$using_no_app != "N",]$using_no_app <- NA
app_cycling[app_cycling$other == "",]$other <- NA
count_app_cycling <- sapply(app_cycling, function(y) sum(length(which(!is.na(y)))))
data <- data.frame( names(count_app_cycling), count_app_cycling )
names(data) <- c("application", "count")
ggplot(data, aes(x = application, y = count ,fill = application)) +
geom_bar(width = 0.85, stat="identity") +
coord_polar(theta = "y") +    # To use a polar plot and not a basic barplot
xlab("") + ylab("") +    #Remove useless labels of axis
ylim(c(0,33)) + #Increase ylim to avoid having a complete circle
geom_text(data = data, hjust = 1, size = 3, aes(x = application, y = 0, label = application)) +   #Add group labels close to the bars :
theme(legend.position = "none" , axis.text.y = element_blank() , axis.ticks = element_blank())    #Remove useless legend, y axis ticks and y axis text
app_clu
app_cycling[app_cycling$using_no_app == NA]
app_cycling[app_cycling$using_no_app == NA,]
app_cycling[which(app_cycling$using_no_app == NA),]
View(app_cycling)
app_cycling[app_cycling$using_no_app == NA,]
size(app_cycling[app_cycling$using_no_app == NA,])
app_cycling[app_cycling$using_no_app == NA,].size()
View(data)
36/59
54/59
table_answers <- read.csv('data/Questionnaire_Answers.csv', stringsAsFactors=FALSE)
table_answers <- read.csv('data/Questionnaire_Answers.csv', stringsAsFactors=FALSE)
mobile_use <- data.frame(table_answers$gaming_apps_basic, table_answers$gaming_apps_messaging, table_answers$gaming_apps_lifestyle,
table_answers$gaming_apps_games, table_answers$gaming_apps_productivity, table_answers$gaming_apps_news)
names(mobile_use) <- c( " basic", " messaging", " lifestyle", " games", " productivity", " news",)
count_app_cycling <- sapply(app_cycling, function(y) sum(length(which(!is.na(y)))))
mobile_use <- data.frame(table_answers$gaming_apps_basic, table_answers$gaming_apps_messaging, table_answers$gaming_apps_lifestyle,
table_answers$gaming_apps_games, table_answers$gaming_apps_productivity, table_answers$gaming_apps_news)
names(mobile_use) <- c( " basic", " messaging", " lifestyle", " games", " productivity", " news",)
names(mobile_use) <- c( " basic", " messaging", " lifestyle", " games", " productivity", " news")
count_app_cycling <- sapply(app_cycling, function(y) sum(length(which(!is.na(y)))))
count_mobile_use <- sapply(mobile_use, function(y) sum(length(which(!is.na(y)))))
data <- data.frame( names(mobile_use), mobile_use )
data <- data.frame( names(count_mobile_use), count_mobile_use )
names(data) <- c("application", "count")
names(data) <- c("use", "count")
View(data)
37/59
32/59
11/59
library(ggplot2)
table_answers <- read.csv('data/Questionnaire_Answers.csv', stringsAsFactors=FALSE)
table_answers <- table_answers[table_answers$City == "Münster",]
table_answers <- table_answers[which( table_answers$competition_1 >= -3 ),]
app_cycling <- data.frame(table_answers$gaming_app_cycling_googlefit, table_answers$gaming_app_cycling_bikecitizens, table_answers$gaming_app_cycling_endomondo,
table_answers$gaming_app_cycling_fitbit, table_answers$gaming_app_cycling_human, table_answers$gaming_app_cycling_runtastic, table_answers$gaming_app_cycling_strava,
table_answers$gaming_app_cycling_wikiloc, table_answers$gaming_app_cycling_other, table_answers$gaming_app_cycling)
names(app_cycling) <- c( " google_fit", " bikecitizens", " endomondo", " fitbit", " human", " runtastic", " strava", " wikiloc", "other", "using_no_app")
app_cycling[app_cycling$using_no_app != "N",]$using_no_app <- NA
app_cycling[app_cycling$other == "",]$other <- NA
count_app_cycling <- sapply(app_cycling, function(y) sum(length(which(!is.na(y)))))
data <- data.frame( names(count_app_cycling), count_app_cycling )
names(data) <- c("application", "count")
View(data)
table_answers <- read.csv('data/Questionnaire_Answers.csv', stringsAsFactors=FALSE)
mobile_use <- data.frame(table_answers$gaming_apps_basic, table_answers$gaming_apps_messaging, table_answers$gaming_apps_lifestyle,
table_answers$gaming_apps_games, table_answers$gaming_apps_productivity, table_answers$gaming_apps_news)
names(mobile_use) <- c( " basic", " messaging", " lifestyle", " games", " productivity", " news")
count_mobile_use <- sapply(mobile_use, function(y) sum(length(which(!is.na(y)))))
data <- data.frame( names(count_mobile_use), count_mobile_use )
names(data) <- c("use", "count")
View(data)
View(data)
count_app_cycling
table_answers <- read.csv('data/Questionnaire_Answers.csv', stringsAsFactors=FALSE)
table_answers <- read.csv('data/Questionnaire_Answers.csv', stringsAsFactors=FALSE)
table_answers <- table_answers[table_answers$City == "Münster",]
table_answers <- read.csv('data/Questionnaire_Answers.csv', stringsAsFactors=FALSE)
app_cycling <- data.frame(table_answers$gaming_app_cycling_googlefit, table_answers$gaming_app_cycling_bikecitizens, table_answers$gaming_app_cycling_endomondo,
table_answers$gaming_app_cycling_fitbit, table_answers$gaming_app_cycling_human, table_answers$gaming_app_cycling_runtastic, table_answers$gaming_app_cycling_strava,
table_answers$gaming_app_cycling_wikiloc, table_answers$gaming_app_cycling_other, table_answers$gaming_app_cycling)
names(app_cycling) <- c( " google_fit", " bikecitizens", " endomondo", " fitbit", " human", " runtastic", " strava", " wikiloc", "other", "using_no_app")
app_cycling[app_cycling$using_no_app != "N",]$using_no_app <- NA
app_cycling[app_cycling$other == "",]$other <- NA
count_app_cycling <- sapply(app_cycling, function(y) sum(length(which(!is.na(y)))))
data <- data.frame( names(count_app_cycling), count_app_cycling )
View(data)
ggplot(data, aes(x = application, y = count ,fill = application)) +
geom_bar(width = 0.85, stat="identity") +
coord_polar(theta = "y") +    # To use a polar plot and not a basic barplot
xlab("") + ylab("") +    #Remove useless labels of axis
ylim(c(0,33)) + #Increase ylim to avoid having a complete circle
geom_text(data = data, hjust = 1, size = 3, aes(x = application, y = 0, label = application)) +   #Add group labels close to the bars :
theme(legend.position = "none" , axis.text.y = element_blank() , axis.ticks = element_blank())    #Remove useless legend, y axis ticks and y axis text
library(ggplot2)
table_answers <- read.csv('data/Questionnaire_Answers.csv', stringsAsFactors=FALSE)
table_answers <- table_answers[table_answers$City == "Münster",]
table_answers <- table_answers[which( table_answers$competition_1 >= -3 ),]
library(ggplot2)
table_answers <- read.csv('data/Questionnaire_Answers.csv', stringsAsFactors=FALSE)
table_answers <- table_answers[table_answers$City == "Münster",]
table_answers <- table_answers[which( table_answers$competition_1 >= -3 ),]
mobile_use <- data.frame(table_answers$gaming_apps_basic, table_answers$gaming_apps_messaging, table_answers$gaming_apps_lifestyle,
table_answers$gaming_apps_games, table_answers$gaming_apps_productivity, table_answers$gaming_apps_news)
names(mobile_use) <- c( " basic", " messaging", " lifestyle", " games", " productivity", " news")
count_mobile_use <- sapply(mobile_use, function(y) sum(length(which(!is.na(y)))))
data <- data.frame( names(count_mobile_use), count_mobile_use )
names(data) <- c("use", "count")
ggplot(data, aes(x = application, y = count ,fill = application)) +
geom_bar(width = 0.85, stat="identity") +
coord_polar(theta = "y") +    # To use a polar plot and not a basic barplot
xlab("") + ylab("") +    #Remove useless labels of axis
ylim(c(0,33)) + #Increase ylim to avoid having a complete circle
geom_text(data = data, hjust = 1, size = 3, aes(x = application, y = 0, label = application)) +   #Add group labels close to the bars :
theme(legend.position = "none" , axis.text.y = element_blank() , axis.ticks = element_blank())    #Remove useless legend, y axis ticks and y axis text
application
ggplot(data, aes(x = use, y = count ,fill = application)) +
geom_bar(width = 0.85, stat="identity") +
coord_polar(theta = "y") +    # To use a polar plot and not a basic barplot
xlab("") + ylab("") +    #Remove useless labels of axis
ylim(c(0,33)) + #Increase ylim to avoid having a complete circle
geom_text(data = data, hjust = 1, size = 3, aes(x = application, y = 0, label = application)) +   #Add group labels close to the bars :
theme(legend.position = "none" , axis.text.y = element_blank() , axis.ticks = element_blank())    #Remove useless legend, y axis ticks and y axis text
ggplot(data, aes(x = use, y = count ,fill = use)) +
geom_bar(width = 0.85, stat="identity") +
coord_polar(theta = "y") +    # To use a polar plot and not a basic barplot
xlab("") + ylab("") +    #Remove useless labels of axis
ylim(c(0,33)) + #Increase ylim to avoid having a complete circle
geom_text(data = data, hjust = 1, size = 3, aes(x = application, y = 0, label = application)) +   #Add group labels close to the bars :
theme(legend.position = "none" , axis.text.y = element_blank() , axis.ticks = element_blank())    #Remove useless legend, y axis ticks and y axis text
ggplot(data, aes(x = use, y = count ,fill = use)) +
geom_bar(width = 0.85, stat="identity") +
coord_polar(theta = "y") +    # To use a polar plot and not a basic barplot
xlab("") + ylab("") +    #Remove useless labels of axis
ylim(c(0,33)) + #Increase ylim to avoid having a complete circle
geom_text(data = data, hjust = 1, size = 3, aes(x = use, y = 0, label = use)) +   #Add group labels close to the bars :
theme(legend.position = "none" , axis.text.y = element_blank() , axis.ticks = element_blank())    #Remove useless legend, y axis ticks and y axis text
table_answers <- read.csv('data/Questionnaire_Answers.csv', stringsAsFactors=FALSE)
mobile_use <- data.frame(table_answers$gaming_apps_basic, table_answers$gaming_apps_messaging, table_answers$gaming_apps_lifestyle,
table_answers$gaming_apps_games, table_answers$gaming_apps_productivity, table_answers$gaming_apps_news)
names(mobile_use) <- c( " basic", " messaging", " lifestyle", " games", " productivity", " news")
count_mobile_use <- sapply(mobile_use, function(y) sum(length(which(!is.na(y)))))
data <- data.frame( names(count_mobile_use), count_mobile_use )
names(data) <- c("use", "count")
ggplot(data, aes(x = use, y = count ,fill = use)) +
geom_bar(width = 0.85, stat="identity") +
coord_polar(theta = "y") +    # To use a polar plot and not a basic barplot
xlab("") + ylab("") +    #Remove useless labels of axis
ylim(c(0,33)) + #Increase ylim to avoid having a complete circle
geom_text(data = data, hjust = 1, size = 3, aes(x = use, y = 0, label = use)) +   #Add group labels close to the bars :
theme(legend.position = "none" , axis.text.y = element_blank() , axis.ticks = element_blank())    #Remove useless legend, y axis ticks and y axis text
library(reshape2)
library(ggplot2)
rm(list=ls())
table_answers <- read.csv('data/Questionnaire_Answers.csv')
gender_values <- c(1,2,3)
gender_labels <- c("Male","Female","Other")
gender_factors <- factor(gender_values)
gender_factor <- factor(table_answers$dem_gender, gender_factors,labels = gender_labels)
marital_values <- c(1,2,3,4,5,6)
marital_labels <- c("Single","In relationship but not living together","In relationship and living together",
"Married","Divorced or widowed","Other")
marital_factors <- factor(marital_values)
marital_factor <- factor(table_answers$dem_marital, marital_factors,labels = marital_labels)
city_factors <- factor(table_answers$City)
city_factors[1]
transport_values <- c(1)
transport_labels <- c("True")
transport = data.frame(table_answers$dem_transport_walk, table_answers$dem_transport_bicycle,
table_answers$dem_transport_public, table_answers$dem_transport_car)
names(transport) = c("Walk", "Bicycle", "Public Transport", "Private Car")
ggplot(transport) +
geom_bar()
source("scripts/setup.R")
View(table_answers)
cycling_profile <- data.frame(table_answers$participant, table_answers$City, table_answers$group, table_answers$profile_cycling_1, table_answers$profile_cycling_2, table_answers$profile_cycling_3,
table_answers$profile_cycling_4, table_answers$profile_cycling_5, table_answers$profile_cycling_6, table_answers$profile_cycling_7, table_answers$profile_cycling_8,
table_answers$profile_cycling_9, table_answers$profile_cycling_10, table_answers$profile_cycling_11, table_answers$profile_cycling_12, table_answers$profile_cycling_13,
table_answers$profile_cycling_14, table_answers$profile_cycling_15)
names(cycling_profile) <- c("participant", "city", "group", "profile_cycling_1", "profile_cycling_2", "profile_cycling_3", "profile_cycling_4", "profile_cycling_5", "profile_cycling_6",
"profile_cycling_7", "profile_cycling_8", "profile_cycling_9", "profile_cycling_10", "profile_cycling_11", "profile_cycling_12", "profile_cycling_13",
"profile_cycling_14", "profile_cycling_15")
cycling_likert <- likert(cycling_profile$profile_cycling_1, )
require(likert)
cycling_likert <- likert(cycling_profile$profile_cycling_1, )
cycling_profile <- data.frame(table_answers$participant, table_answers$City, table_answers$group, table_answers$profile_cycling_1, table_answers$profile_cycling_2, table_answers$profile_cycling_3,
table_answers$profile_cycling_4, table_answers$profile_cycling_5, table_answers$profile_cycling_6, table_answers$profile_cycling_7, table_answers$profile_cycling_8,
table_answers$profile_cycling_9, table_answers$profile_cycling_10, table_answers$profile_cycling_11, table_answers$profile_cycling_12, table_answers$profile_cycling_13,
table_answers$profile_cycling_14, table_answers$profile_cycling_15)
names(cycling_profile) <- c("participant", "city", "group", "profile_cycling_1", "profile_cycling_2", "profile_cycling_3", "profile_cycling_4", "profile_cycling_5", "profile_cycling_6",
"profile_cycling_7", "profile_cycling_8", "profile_cycling_9", "profile_cycling_10", "profile_cycling_11", "profile_cycling_12", "profile_cycling_13",
"profile_cycling_14", "profile_cycling_15")
likert_values <- c(-3,-2,-1,0,1,2,3)
likert_labels <- c("Strongly disagree (-3)","(-2)","(-1)","Neutral (0)","(1)","(2)","Strongly agree (3)")
likert_factors <- factor(likert_values)
profile_1_factor <- factor(cycling_profile$profile_cycling_1, likert_factors,labels = likert_labels)
profile_1_factor <- factor(cycling_profile$profile_cycling_1, likert_factors,labels = likert_labels)
profile_factors <- data.frame(profile_1_factor, profile_1_factor)
names(profile_factors) <- c("cycling 1", "cycling 2")
title <- "Lickert cycling profile"
profile_likert <- likert(profile_factors )
plot(profile_likert, centered = TRUE) + ggtitle(title) + theme(plot.title = element_text(hjust = 0.5)) +
guides(fill=guide_legend(title=NULL, nrow = 1))
cycling_profile <- data.frame(table_answers$participant, table_answers$City, table_answers$group, table_answers$profile_cycling_1, table_answers$profile_cycling_2, table_answers$profile_cycling_3,
table_answers$profile_cycling_4, table_answers$profile_cycling_5, table_answers$profile_cycling_6, table_answers$profile_cycling_7, table_answers$profile_cycling_8,
table_answers$profile_cycling_9, table_answers$profile_cycling_10, table_answers$profile_cycling_11, table_answers$profile_cycling_12, table_answers$profile_cycling_13,
table_answers$profile_cycling_14, table_answers$profile_cycling_15)
names(cycling_profile) <- c("participant", "city", "group", "profile_cycling_1", "profile_cycling_2", "profile_cycling_3", "profile_cycling_4", "profile_cycling_5", "profile_cycling_6",
"profile_cycling_7", "profile_cycling_8", "profile_cycling_9", "profile_cycling_10", "profile_cycling_11", "profile_cycling_12", "profile_cycling_13",
"profile_cycling_14", "profile_cycling_15")
likert_values <- c(-3,-2,-1,0,1,2,3)
likert_labels <- c("Strongly disagree (-3)","(-2)","(-1)","Neutral (0)","(1)","(2)","Strongly agree (3)")
likert_factors <- factor(likert_values)
profile_5_factor <- factor(cycling_profile$profile_cycling_5, likert_factors,labels = likert_labels)
profile_8_factor <- factor(cycling_profile$profile_cycling_8, likert_factors,labels = likert_labels)
profile_10_factor <- factor(cycling_profile$profile_cycling_10, likert_factors,labels = likert_labels)
profile_13_factor <- factor(cycling_profile$profile_cycling_13, likert_factors,labels = likert_labels)
profile_14_factor <- factor(cycling_profile$profile_cycling_14, likert_factors,labels = likert_labels)
profile_15_factor <- factor(cycling_profile$profile_cycling_15, likert_factors,labels = likert_labels)
profile_infratructure_factors <- data.frame(profile_5_factor, profile_8_factor, profile_10_factor, profile_13_factor, profile_14_factor, profile_15_factor)
names(profile_infratructure_factors) <- c("More cycle lanes would make me feel safer", "It would be a bad experience using the existing roads", "It would be too much physical effort", "It would take me too long", "It would put my bike at risk of being stolen while is parked", "It would mean I have to negotiate difficult road junctions")
title <- "Perception of infrastructrue "
profile_infrastructure_likert <- likert(profile_infratructure_factors )
plot(profile_infrastructure_likert, centered = TRUE) + ggtitle(title) + theme(plot.title = element_text(hjust = 0.5)) +
guides(fill=guide_legend(title=NULL, nrow = 1))
plot(profile_infrastructure_likert, centered = TRUE) + ggtitle("") + theme(plot.title = element_text(hjust = 0.5)) +
guides(fill=guide_legend(title=NULL, nrow = 1))
profile_3_factor <- factor(cycling_profile$profile_cycling_3, likert_factors,labels = likert_labels)
profile_9_factor <- factor(cycling_profile$profile_cycling_9, likert_factors,labels = likert_labels)
profile_11_factor <- factor(cycling_profile$profile_cycling_11, likert_factors,labels = likert_labels)
profile_12_factor <- factor(cycling_profile$profile_cycling_12, likert_factors,labels = likert_labels)
profile_environment_factors <- data.frame(profile_3_factor, profile_8_factor, profile_9_factor, profile_11_factor, profile_12_factor)
names(profile_environment_factors) <- c("More cycle lanes would make me feel safer", "It would be a bad experience using the existing roads", "It would be too much physical effort", "It would take me too long", "It would put my bike at risk of being stolen while is parked", "It would mean I have to negotiate difficult road junctions")
names(profile_environment_factors) <- c("I would feel part of my community", "It would mean 'I contribute less to climate change'", "It would more than likely expose me to wet or windy weather", "It would mean 'I contribute less to local air pollution'")
title <- "Perception of environment"
profile_environment_likert <- likert(profile_environment_factors )
plot(profile_environment_likert, centered = TRUE) + ggtitle("") + theme(plot.title = element_text(hjust = 0.5)) +
guides(fill=guide_legend(title=NULL, nrow = 1))
profile_3_factor <- factor(cycling_profile$profile_cycling_3, likert_factors,labels = likert_labels)
profile_9_factor <- factor(cycling_profile$profile_cycling_9, likert_factors,labels = likert_labels)
profile_11_factor <- factor(cycling_profile$profile_cycling_11, likert_factors,labels = likert_labels)
profile_12_factor <- factor(cycling_profile$profile_cycling_12, likert_factors,labels = likert_labels)
profile_environment_factors <- data.frame(profile_3_factor, profile_9_factor, profile_11_factor, profile_12_factor)
names(profile_environment_factors) <- c("I would feel part of my community", "It would mean 'I contribute less to climate change'", "It would more than likely expose me to wet or windy weather", "It would mean 'I contribute less to local air pollution'")
title <- "Perception of environment"
profile_environment_likert <- likert(profile_environment_factors )
plot(profile_environment_likert, centered = TRUE) + ggtitle("") + theme(plot.title = element_text(hjust = 0.5)) +
guides(fill=guide_legend(title=NULL, nrow = 1))
